% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GetConceptRecordCount.R
\name{getConceptRecordCount}
\alias{getConceptRecordCount}
\title{Given conceptId(s) get the record count.}
\usage{
getConceptRecordCount(
  conceptIds = NULL,
  connection = NULL,
  connectionDetails = NULL,
  cdmDatabaseSchema,
  vocabularyDatabaseSchema = cdmDatabaseSchema,
  tempEmulationSchema = getOption("sqlRenderTempEmulationSchema"),
  minCellCount = 0,
  domainTableName = c("drug_exposure", "condition_occurrence", "procedure_occurrence",
    "mesaurement", "observation"),
  incidence = FALSE
)
}
\arguments{
\item{conceptIds}{An array of Concept ids.}

\item{connection}{An object of type \code{connection} as created using the
\code{\link[DatabaseConnector]{connect}} function in the
DatabaseConnector package. Can be left NULL if \code{connectionDetails}
is provided, in which case a new connection will be opened at the start
of the function, and closed when the function finishes.}

\item{connectionDetails}{An object of type \code{connectionDetails} as created using the
\code{\link[DatabaseConnector]{createConnectionDetails}} function in the
DatabaseConnector package. Can be left NULL if \code{connection} is
provided.}

\item{cdmDatabaseSchema}{Schema name where your patient-level data in OMOP CDM format resides.
Note that for SQL Server, this should include both the database and
schema name, for example 'cdm_data.dbo'.}

\item{vocabularyDatabaseSchema}{The schema name of containing the vocabulary tables.}

\item{tempEmulationSchema}{Some database platforms like Oracle and Impala do not truly support temp tables. To emulate temp 
tables, provide a schema with write privileges where temp tables can be created.}

\item{minCellCount}{The minimum cell count for fields containing person/subject count.}

\item{incidence}{Do you want to limit to first dispensation by person?}

\item{domain}{domains to look for concept id}
}
\value{
Returns a tibble data frame.
}
\description{
Given conceptId(s) get the record count.
}
